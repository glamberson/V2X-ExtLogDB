
' ImportAndUpdateFulfillmentItems
' version 0.9.34
Sub ImportAndUpdateFulfillmentItems()
    Dim xlApp As Object
    Dim xlWorkbook As Object
    Dim xlSheet As Object
    Dim columnLookup As Object
    Dim validationRules As New Collection
    Dim isValid As Boolean
    Dim filePath As String
    
    On Error GoTo ErrorHandler
    
    Debug.Print "Starting ImportAndUpdateFulfillmentItems"
    
    ' Use the SelectExcelFile function
    filePath = SelectExcelFile()
    Debug.Print "After SelectExcelFile, filePath = " & filePath
    
    If filePath = "" Then
        MsgBox "No file selected. Process aborted.", vbExclamation
        Exit Sub
    End If
    
    ' Create a new Excel application instance
    Set xlApp = CreateObject("Excel.Application")
    Debug.Print "Excel application created"
    
    ' Open the workbook (writable mode to allow preprocessing)
    Set xlWorkbook = xlApp.Workbooks.Open(filePath)
    Debug.Print "Workbook opened: " & xlWorkbook.Name
    
    ' Use the reusable function to select the worksheet
    Set xlSheet = SelectWorksheet(xlWorkbook)
    If xlSheet Is Nothing Then
        Debug.Print "No worksheet selected"
        GoTo Cleanup
    End If
    Debug.Print "Selected worksheet: " & xlSheet.Name
    
    ' Clean up the column names before proceeding
    Call CleanUpColumnNames(xlSheet, 1)
    Debug.Print "Column names cleaned up"
    
    ' Clean up the data before validation
    Call CleanUpData(xlSheet, 1)
    Debug.Print "Data cleaned up"
    
    ' Build the column lookup table
    Set columnLookup = BuildColumnLookup(xlSheet, 1)
    Debug.Print "Column lookup table built"
    
    ' Proceed with importing the data
    Call ImportExcelToAccess(filePath)
    Debug.Print "Excel data imported to Access"
    
    Call UpdateFulfillmentItems
    Debug.Print "Fulfillment records updated"
    
    MsgBox "Import and update process completed successfully.", vbInformation
    
    GoTo Cleanup

ErrorHandler:
    Debug.Print "Error in ImportAndUpdateFulfillmentItems: " & Err.Description & " (Error " & Err.Number & ")"
    Debug.Print "Error Source: " & Err.Source
    MsgBox "An error occurred: " & Err.Description, vbExclamation

Cleanup:
    On Error Resume Next
    Debug.Print "Starting cleanup"

    ' Explicitly set the sheet reference to Nothing
    Set xlSheet = Nothing
    Debug.Print "xlSheet reference cleared"
    
    ' Close the workbook without saving any changes
    If Not xlWorkbook Is Nothing Then
        xlWorkbook.Close SaveChanges:=False ' Explicitly discard changes
        Debug.Print "Workbook closed"
    End If
    
    ' Explicitly set the workbook reference to Nothing
    Set xlWorkbook = Nothing
    Debug.Print "xlWorkbook reference cleared"
    
    ' Quit the Excel application
    If Not xlApp Is Nothing Then
        xlApp.Quit
        Debug.Print "Excel application quit"
    End If
    
    ' Explicitly set the application reference to Nothing
    Set xlApp = Nothing
    Debug.Print "xlApp reference cleared"

    ' Use the Sleep API to pause briefly, allowing Windows to release file handles
    Sleep 1000 ' Wait for 1 second to allow the OS to release file locks

    ' Optionally, kill any lingering Excel processes
    KillExcelProcesses

    Debug.Print "Cleanup completed"
End Sub

