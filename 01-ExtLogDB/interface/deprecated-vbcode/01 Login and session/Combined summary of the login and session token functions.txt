

' version 0.7.2


' Declare global variables to store the session token and the connection
Public g_sessionToken As String

' Function to create a DSN-less connection using the generic user
Public Function CreatePostgresConnection() As ADODB.Connection
    Dim conn As ADODB.Connection
    Set conn = New ADODB.Connection

    conn.ConnectionString = "Driver={PostgreSQL Unicode};" & _
                            "Server=your_server_address;" & _
                            "Port=5432;" & _
                            "Database=your_database_name;" & _
                            "Uid=generic_user;" & _
                            "Pwd=generic_password;"
    conn.Open
    
    Set CreatePostgresConnection = conn
End Function

' Function to validate user login and store session token
Public Function ValidateUser(username As String, password As String) As Boolean
    Dim conn As ADODB.Connection
    Dim cmd As ADODB.Command
    Dim rs As ADODB.Recordset
    Dim isValid As Boolean

    Set conn = CreatePostgresConnection()

    Set cmd = New ADODB.Command
    cmd.ActiveConnection = conn
    cmd.CommandText = "SELECT user_login(?, ?, ?)"
    cmd.Parameters.Append cmd.CreateParameter("@p_username", adVarChar, adParamInput, 255, username)
    cmd.Parameters.Append cmd.CreateParameter("@p_password", adVarChar, adParamInput, 255, password)
    cmd.Parameters.Append cmd.CreateParameter("@p_duration", adVarChar, adParamInput, 255, "1 hour") ' Session duration

    Set rs = cmd.Execute
    If Not rs.EOF Then
        g_sessionToken = rs.Fields(0).Value
        isValid = Not IsNull(g_sessionToken)
    End If
    
    rs.Close
    conn.Close

    ValidateUser = isValid
End Function

' Function to log an action
Public Sub LogAction(action As String, details As String)
    Dim conn As ADODB.Connection
    Dim cmd As ADODB.Command

    Set conn = CreatePostgresConnection()

    Set cmd = New ADODB.Command
    cmd.ActiveConnection = conn
    cmd.CommandText = "SELECT log_action(?, ?, ?)"
    cmd.Parameters.Append cmd.CreateParameter("@p_session_id", adVarChar, adParamInput, 255, g_sessionToken)
    cmd.Parameters.Append cmd.CreateParameter("@p_action", adVarChar, adParamInput, 255, action)
    cmd.Parameters.Append cmd.CreateParameter("@p_details", adVarChar, adParamInput, 255, details)
    
    cmd.Execute

    conn.Close
End Sub

' Function to log out the user and invalidate the session token
Public Sub LogoutUser()
    Dim conn As ADODB.Connection
    Dim cmd As ADODB.Command

    Set conn = CreatePostgresConnection()

    Set cmd = New ADODB.Command
    cmd.ActiveConnection = conn
    cmd.CommandText = "SELECT invalidate_session(?)"
    cmd.Parameters.Append cmd.CreateParameter("@p_session_id", adVarChar, adParamInput, 255, g_sessionToken)
    
    cmd.Execute

    conn.Close
    
    ' Clear the session token
    g_sessionToken = ""
End Sub
