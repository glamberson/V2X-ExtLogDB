'Convert to JSON
'version 0.8.39

Public Function ConvertToJSON() As Variant
    Dim db As DAO.Database
    Dim rs As DAO.Recordset
    Dim json As String
    Dim f As DAO.Field
    Dim keyFields As Collection
    Dim keyField As Variant
    Dim isEmptyRecord As Boolean
    Dim trimmedFieldName As String
    Dim errorLog As String
    Dim recordCount As Long
    Dim errorCount As Long
    
    ' Define the key fields to check
    Set keyFields = New Collection
    keyFields.Add "jcn"
    keyFields.Add "twcode"
    keyFields.Add "qty"
    keyFields.Add "request_date"
    ' Add other key fields as needed

    Set db = CurrentDb()
    Set rs = db.OpenRecordset("SELECT * FROM TempTable")

    If rs.EOF Then
        ConvertToJSON = Array("[]", "No records found.")
        Exit Function
    End If

    json = "["
    errorLog = ""
    recordCount = 0
    errorCount = 0
    
    Do While Not rs.EOF
        recordCount = recordCount + 1
        isEmptyRecord = True
        
        ' Check if key fields are empty
        For Each keyField In keyFields
            On Error Resume Next
            trimmedFieldName = Trim(keyField)
            If IsNull(rs.Fields(trimmedFieldName)) Or rs.Fields(trimmedFieldName).Value = "" Then
                If Err.Number = 0 Then
                    errorLog = errorLog & "Record " & recordCount & ": Empty " & trimmedFieldName & vbCrLf
                Else
                    errorLog = errorLog & "Record " & recordCount & ": Missing field " & trimmedFieldName & vbCrLf
                End If
                errorCount = errorCount + 1
            Else
                isEmptyRecord = False
            End If
            On Error GoTo 0
        Next keyField
        
        If Not isEmptyRecord Then
            json = json & "{"
            For Each f In rs.Fields
                trimmedFieldName = Trim(f.Name)
                json = json & """" & EscapeJSON(trimmedFieldName) & """:"
                On Error Resume Next
                If IsNull(f.Value) Then
                    json = json & "null"
                ElseIf f.Type = dbText Then
                    json = json & """" & EscapeJSON(CStr(f.Value)) & """"
                ElseIf f.Type = dbDate Then
                    json = json & """" & Format(f.Value, "yyyy-mm-ddThh:nn:ss") & """"
                Else
                    json = json & EscapeJSON(CStr(f.Value))
                End If
                If Err.Number <> 0 Then
                    errorLog = errorLog & "Record " & recordCount & ": Error in field " & trimmedFieldName & " - " & Err.Description & vbCrLf
                    errorCount = errorCount + 1
                    Err.Clear
                End If
                On Error GoTo 0
                json = json & ","
            Next f
            json = Left(json, Len(json) - 1) ' Remove trailing comma
            json = json & "},"
        End If

        rs.MoveNext
    Loop
    
    If Right(json, 1) = "," Then
        json = Left(json, Len(json) - 1) ' Remove trailing comma from the last record
    End If
    
    json = json & "]"
    
    rs.Close
    Set rs = Nothing
    Set db = Nothing
    
    errorLog = "Total Records: " & recordCount & vbCrLf & _
               "Records with Errors: " & errorCount & vbCrLf & vbCrLf & errorLog
    
    ConvertToJSON = Array(json, errorLog)
End Function

' Helper function to escape JSON
Private Function EscapeJSON(ByVal text As String) As String
    Dim i As Integer
    Dim char As String
    Dim result As String
    
    For i = 1 To Len(text)
        char = Mid(text, i, 1)
        Select Case AscW(char)
            Case 8:  result = result & "\b"
            Case 9:  result = result & "\t"
            Case 10: result = result & "\n"
            Case 12: result = result & "\f"
            Case 13: result = result & "\r"
            Case 34: result = result & "\"""
            Case 92: result = result & "\\"
            Case 0 To 31
                result = result & "\u" & Right("0000" & Hex(AscW(char)), 4)
            Case Else
                result = result & char
        End Select
    Next i
    
    EscapeJSON = result
End Function
