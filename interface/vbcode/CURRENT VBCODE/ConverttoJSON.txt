' version 0.9.15

Public Function ConvertToJSON(rs As DAO.Recordset, Optional keyFields As Collection) As Variant
    Dim json As String
    Dim f As DAO.Field
    Dim keyField As Variant
    Dim isEmptyRecord As Boolean
    Dim recordCount As Long
    Dim errorCount As Long
    Dim errorLog As String
    
    ' If keyFields is not provided, initialize it with default values
    If keyFields Is Nothing Then
        Set keyFields = New Collection
        keyFields.Add "jcn"
        keyFields.Add "twcode"
        keyFields.Add "qty"
        keyFields.Add "request_date"
        ' Add other key fields as needed
    End If
    
    If rs.EOF Then
        ConvertToJSON = Array("[]", "No records found.")
        Exit Function
    End If

    json = "["
    errorLog = ""
    recordCount = 0
    errorCount = 0
    
    Do While Not rs.EOF
        recordCount = recordCount + 1
        isEmptyRecord = True
        
        ' Check if key fields are empty
        For Each keyField In keyFields
            If IsNull(rs.Fields(keyField).Value) Or rs.Fields(keyField).Value = "" Then
                errorLog = errorLog & "Record " & recordCount & ": Empty " & keyField & vbCrLf
                errorCount = errorCount + 1
            Else
                isEmptyRecord = False
            End If
        Next keyField
        
        If Not isEmptyRecord Then
            json = json & "{"
            For Each f In rs.Fields
                json = json & """" & EscapeJSON(f.Name) & """:"
                If IsNull(f.Value) Then
                    json = json & "null"
                ElseIf f.Type = dbText Then
                    json = json & """" & EscapeJSON(CStr(f.Value)) & """"
                ElseIf f.Type = dbDate Then
                    json = json & """" & Format(f.Value, "yyyy-mm-ddThh:nn:ss") & """"
                Else
                    json = json & EscapeJSON(CStr(f.Value))
                End If
                json = json & ","
            Next f
            json = Left(json, Len(json) - 1) ' Remove trailing comma
            json = json & "},"
        End If

        rs.MoveNext
    Loop
    
    If Right(json, 1) = "," Then
        json = Left(json, Len(json) - 1) ' Remove trailing comma
    End If
    
    json = json & "]"
    
    rs.Close
    Set rs = Nothing
    
    errorLog = "Total Records: " & recordCount & vbCrLf & _
               "Records with Errors: " & errorCount & vbCrLf & vbCrLf & errorLog
    
    ConvertToJSON = Array(json, errorLog)
End Function

