
' execute protected (postgres) function or procedure
' version 0.7.14.31

Public Function ExecuteProtectedFunction(functionName As String, ParamArray args()) As Variant
    Dim cmd As ADODB.Command
    Dim rs As ADODB.Recordset
    
    Set cmd = New ADODB.Command
    With cmd
        .ActiveConnection = g_conn
        .CommandText = "SELECT (validate_session_and_permission(?, ?)).*"
        .Parameters.Append .CreateParameter("@p_session_id", adGUID, adParamInput, , g_sessionToken)
        .Parameters.Append .CreateParameter("@p_function_name", adVarChar, adParamInput, 255, functionName)
    End With
    
    Set rs = cmd.Execute
    
    Dim isValid As Boolean
    If Not rs.EOF Then
        ' Debug information
        Debug.Print "Number of fields: " & rs.Fields.Count
        Dim i As Integer
        For i = 0 To rs.Fields.Count - 1
            Debug.Print "Field " & i & ": " & rs.Fields(i).Name & " = " & rs.Fields(i).Value
        Next i
        
        isValid = rs.Fields("is_valid").Value
    Else
        isValid = False
    End If
    
    rs.Close
    Set rs = Nothing
    
    If Not isValid Then
        MsgBox "You don't have permission to perform this action.", vbExclamation
        Exit Function
    End If
    
    ' If we get here, the session is valid and the user has permission
    ' Now we can execute the actual function or procedure
    
    Set cmd = New ADODB.Command
    With cmd
        .ActiveConnection = g_conn
        .CommandType = adCmdText
        .CommandText = "CALL " & functionName & "("
        
        ' Add parameters
        Dim j As Long
        For j = LBound(args) To UBound(args)
            If j > LBound(args) Then .CommandText = .CommandText & ", "
            .CommandText = .CommandText & "?"
            .Parameters.Append .CreateParameter("param" & (j + 1), adVarChar, adParamInput, 8000, args(j))
        Next j
        
        .CommandText = .CommandText & ")"
    End With
    
    On Error GoTo ErrorHandler
    
    cmd.Execute
    
    ExecuteProtectedFunction = True ' Indicate success
    
    Set cmd = Nothing
    Exit Function

ErrorHandler:
    Debug.Print "Error in ExecuteProtectedFunction: " & Err.Description
    Debug.Print "Error Number: " & Err.Number
    Debug.Print "Command Text: " & cmd.CommandText
    ExecuteProtectedFunction = False ' Indicate failure
    If Err.Number = 42883 Then  ' Function does not exist
        MsgBox "Function or procedure '" & functionName & "' does not exist.", vbExclamation
    Else
        MsgBox "An error occurred: " & Err.Description, vbExclamation
    End If
End Function