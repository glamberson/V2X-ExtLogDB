' version 0.9.23

Public Sub InsertMRLLineItems()
    Dim jsonData As Variant
    Dim updateSource As String
    Dim result As Variant
    Dim jsonString As String
    Dim errorLog As String
    Dim db As DAO.Database
    Dim rs As DAO.Recordset
    
    On Error GoTo ErrorHandler
    
    Debug.Print "Starting InsertMRLLineItems"
    
    On Error Resume Next
    Set frm = Forms!frMRL
    If Err.Number <> 0 Then
        Debug.Print "Error setting form reference: " & Err.Description
        Debug.Print "Variable: frm"
        Err.Clear
    End If
    On Error GoTo ErrorHandler
    
    Set db = CurrentDb()
    Set rs = db.OpenRecordset("TempTable", dbOpenSnapshot)
    
    On Error Resume Next
    jsonData = ConvertToJSON(rs)
    If Err.Number <> 0 Then
        Debug.Print "Error in ConvertToJSON: " & Err.Description
        Debug.Print "Variable: " & GetVariableName(rs)
        Err.Clear
    End If
    On Error GoTo ErrorHandler
    
    rs.Close
    Set rs = Nothing
    Set db = Nothing
    
    On Error Resume Next
    jsonString = CStr(jsonData(0))
    If Err.Number <> 0 Then
        Debug.Print "Error setting jsonString: " & Err.Description
        Debug.Print "Variable: jsonData"
        Err.Clear
    End If
    
    errorLog = CStr(jsonData(1))
    If Err.Number <> 0 Then
        Debug.Print "Error setting errorLog: " & Err.Description
        Debug.Print "Variable: jsonData"
        Err.Clear
    End If
    
    updateSource = frm.txtUpdateSource.Value
    If Err.Number <> 0 Then
        Debug.Print "Error setting updateSource: " & Err.Description
        Debug.Print "Variable: frm.txtUpdateSource"
        Err.Clear
    End If
    On Error GoTo ErrorHandler
    
    Debug.Print "JSON string length: " & Len(jsonString)
    Debug.Print "Update source: " & updateSource
    
    Debug.Print "Calling ExecuteProtectedFunction"
    result = ExecuteProtectedFunction("insert_mrl_line_items", jsonString, updateSource)
    Debug.Print "ExecuteProtectedFunction completed"
    
    ' Check the result
    If Not IsNull(result) Then
        ' Parse the results
        Dim totalCount As Long, successCount As Long, duplicateCount As Long, errorCount As Long
        Dim parsedResult As Variant
        parsedResult = ParseNoticeMessage(CStr(result))
        
        If IsArray(parsedResult) Then
            totalCount = parsedResult(0)
            successCount = parsedResult(1)
            duplicateCount = parsedResult(2)
            errorCount = parsedResult(3)
            
            ' Log errors and duplicates for later processing
            LogErrorsAndDuplicates totalCount, successCount, duplicateCount, errorCount, errorLog
        Else
            MsgBox "Unexpected result format from insert_mrl_line_items. Check the database logs for details.", vbExclamation
            Exit Sub
        End If
    Else
        MsgBox "Unexpected result type from insert_mrl_line_items. Check the database logs for details.", vbExclamation
        Exit Sub
    End If
    
    ' Display results
    MsgBox "Process completed." & vbNewLine & _
           "Total Records: " & totalCount & vbNewLine & _
           "Successful Inserts: " & successCount & vbNewLine & _
           "Duplicate Records: " & duplicateCount & vbNewLine & _
           "Failed Inserts: " & errorCount & vbNewLine & _
           "See error log for details.", vbInformation
    
    ' Save error logs to a file
    Dim fso As Object
    Dim fileName As String
    Set fso = CreateObject("Scripting.FileSystemObject")
    fileName = "C:\Temp\MRLInsertErrorLog_" & Format(Now, "yyyymmdd_hhnnss") & ".txt"
    fso.CreateTextFile(fileName).Write "Pre-insert Errors:" & vbNewLine & errorLog & vbNewLine & vbNewLine & _
                                       "Insert Process Results:" & vbNewLine & CStr(result)
    MsgBox "Error log has been saved to " & fileName, vbInformation

    Exit Sub

ErrorHandler:
    Debug.Print "Error in InsertMRLLineItems: " & Err.Description
    Debug.Print "Error Number: " & Err.Number
    Debug.Print "Error Source: " & Err.Source
    Debug.Print "Line: " & Erl
    Resume Next
End Sub

