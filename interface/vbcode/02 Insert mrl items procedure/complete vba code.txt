Sub ImportAndInsertMRLLineItems()
    If Not ValidateExcelData() Then
        MsgBox "Data validation failed. Please correct the errors and try again."
        Exit Sub
    End If
    
    ImportExcelToAccess
    InsertMRLLineItems
End Sub

Sub ImportExcelToAccess()
    Dim filePath As String
    filePath = "C:\path\to\your\excel_file.xlsx"
    
    DoCmd.TransferSpreadsheet acImport, acSpreadsheetTypeExcel12, "TempTable", filePath, True
End Sub

Public Function ConvertToJSON() As String
    Dim db As DAO.Database
    Dim rs As DAO.Recordset
    Dim json As String
    Dim f As DAO.Field
    
    Set db = CurrentDb()
    Set rs = db.OpenRecordset("SELECT * FROM TempTable")

    json = "["
    
    Do While Not rs.EOF
        json = json & "{"
        For Each f In rs.Fields
            json = json & """" & f.Name & """:"
            If IsNull(f.Value) Then
                json = json & "null"
            ElseIf f.Type = dbText Then
                json = json & """" & f.Value & """"
            Else
                json = json & f.Value
            End If
            json = json & ","
        Next f
        json = Left(json, Len(json) - 1)
        json = json & "},"
        rs.MoveNext
    Loop
    
    json = Left(json, Len(json) - 1)
    json = json & "]"
    
    rs.Close
    Set rs = Nothing
    Set db = Nothing
    
    ConvertToJSON = json
End Function

Public Sub InsertMRLLineItems()
    Dim conn As ADODB.Connection
    Dim cmd As ADODB.Command
    Dim jsonData As String
    
    jsonData = ConvertToJSON()
    
    Set conn = GetPostgreSQLConnection()
    Set cmd = New ADODB.Command
    
    With cmd
        .ActiveConnection = conn
        .CommandType = adCmdText
        .CommandText = "CALL insert_mrl_line_items(?)"
        .Parameters.Append .CreateParameter("@batch_data", adLongVarChar, adParamInput, , jsonData)
        .Execute
    End With
    
    conn.Close
End Sub

Public Function GetPostgreSQLConnection() As ADODB.Connection
    Dim conn As ADODB.Connection
    Set conn = New ADODB.Connection
    conn.ConnectionString = "Driver={PostgreSQL Unicode};Server=your_server;Port=5432;Database=your_db;Uid=your_username;Pwd=your_password;"
    conn.Open
    Set GetPostgreSQLConnection = conn
End Function

Public Function ValidateExcelData() As Boolean
    Dim ws As Worksheet
    Dim row As Integer
    Dim isValid As Boolean
    
    Set ws = ThisWorkbook.Sheets("Sheet1") ' Adjust to your sheet name
    isValid = True
    
    For row = 2 To ws.Cells(ws.Rows.Count, "A").End(xlUp).row ' Assuming row 1 is the header row
        If IsEmpty(ws.Cells(row, 1)) Then ' Validate jcn
            MsgBox "Error: jcn is required at row " & row
            isValid = False
        End If
        
        If Not IsNumeric(ws.Cells(row, 8)) Or ws.Cells(row, 8).Value <= 0 Then ' Validate qty
            MsgBox "Error: qty must be a positive number at row " & row
            isValid = False
        End If
        
        If Not IsDate(ws.Cells(row, 13)) Then ' Validate request_date
            MsgBox "Error: request_date must be a valid date at row " & row
            isValid = False
        End If
        
        If Not IsNumeric(ws.Cells(row, 28)) Then ' Validate created_by
            MsgBox "Error: created_by must be a number at row " & row
            isValid = False
        End If
        
        ' Additional validation rules can be added here...
        
        If Not isValid Then Exit For
    Next row
    
    ValidateExcelData = isValid
End Function
